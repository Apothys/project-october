-content_for :javascripts do
  :javascript
    // TODO: Figure out a way that this doesn't depend on jQuery loading first
    // Also use prototypical inheritance so it ends up being something like
    //  "new October.Homepage()"
    var OctoberHomepage = (function($) {
      var $articles = $("#articles .row"),
        prevWidth = 0,
        masonryEnabled = false;

      var init = function() {
        $(window).resize(updateHomepageHandler);
        $(window).on('load', function() {
          window.setTimeout(function() {
            updateHomepageHandler({ force: true });
          }, 10);
        });
        updateHomepageHandler();
      }

      var updateHomepageHandler = function(ev) {
        force = !!ev && !!ev.force;

        var nowWidth = $articles.width();

        if (masonryEnabled && nowWidth == prevWidth && !force) { return; }
        if (nowWidth < 724) {
          if (masonryEnabled) {
            $articles.masonry('destroy');
            masonryEnabled = false;
          }

          return;
        }

        prevWidth = nowWidth;
        masonryEnabled = true;

        updateImages();

        $articles.masonry({
          itemSelector: '.article',
          columnWidth: nowWidth / 3,
        });
      }

      var updateImages = function() {
        width = $articles.find(".article.square").width();

        $articles.find(".article.square img").each(function(i) {
          $this = $(this);
          $this.css({
            width: width,
            height: width * $this.data('ratio')
          });
        });
      }

      return {
        init : init,
      };
    }($));

    $(function() {
      OctoberHomepage.init();
    });

.row
  -# The following is a temporary fix until tom figures out a better way to do this
  - featured = @posts.detect{ |p| p.image.present? }
  - if @posts.empty?
    = "There aren't any posts yet!"
  - else
    = render 'feature_article', :article => featured
  -@posts.each do |p|
    - next if p == featured
    - if p.image.present?
      = render 'square_article_with_picture', :article => p
    - else
      = render 'square_article', :article => p
  -#['feature_article', 'square_article_with_picture', 'square_article'].cycle(10).to_a.sample(8).each do |a|
    =# render a
